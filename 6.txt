源代码：
1.img1.m[产生高斯噪声并用高斯滤波器和中值滤波器滤波]
I=imread('lena.bmp'); 
figure(1);
subplot(1,2,1)
imshow(I); 
title('原始图像lena.bmp'); 
imwrite(I,'原始图像lena.bmp'); 
I2=imnoise(I,'gaussian',0.5,0.01); 
subplot(1,2,2)
imshow(I2); 
title('加入gaussian噪声后的lena.bmp(u=0.5，s^2=0.01)'); 
imwrite(I2,'加入gaussian噪声后的lena.bmp(u=0.5，s^2=0.01).bmp'); 
 
figure(2);
subplot(2,2,1)
imshow(I); 
title('原始图像lena.bmp');
subplot(2,2,2)
imshow(I2); 
title('lena加入gaussian噪声后的（u=0.5，s^2=0.01).bmp'); 
 
n=5;  
a=ones(n,n); 
p=size(I2);    
x1=double(I2);
x2=x1; 
for i=1:p(1)-n+1   
    for j=1:p(2)-n+1    
        c=x1(i:i+(n-1),j:j+(n-1));           
        e=c(1,:);       
        for u=2:n           
            e=[e,c(u,:)];            
        end 
        mm=median(e);     
        x2(i+(n-1)/2,j+(n-1)/2)=mm;    
    end
end
I3=uint8(x2);
subplot(2,2,3)
imshow(I3);  
title('中值滤波（5x5）'); 
imwrite(I3,'中值滤波（5x5）.bmp');
 
[I2,map]=imread('加入gaussian噪声后的lena.bmp(u=0.5，s^2=0.01).bmp');
k=1.5; 
Img=double(I2);  
n=5; 
n1=floor((n+1)/2); 
for i=1:n      
    for j=1:n  
      b(i,j) =exp(-((i-n1)^2+(j-n1)^2)/(4*k))/(4*pi*k);      
    end
end 
Img1=conv2(Img,b,'same'); 
d=uint8(Img1); 
subplot(2,2,4); 
imshow(d,map); 
title('高斯滤波5x5') 
 
2.img2.m[运动模糊+高斯噪声、维纳滤波、约束最小二乘滤波]
I=imread('lena.bmp'); 
figure(1);
subplot(1,2,1)
imshow(I); 
title('lena.bmp原始图像'); 
imwrite(I,'lena原始图像.bmp'); 
f=double(I);      
F=fft2(f);       
F=fftshift(F);    
[M,N]=size(F); 
a=0.1;
b=0.1;
T=1; 
for u=1:M 
    for v=1:N     
H(u,v)=(T/(pi*(u*a+v*b)))*sin(pi*(u*a+v*b))*exp(-sqrt(-1)*pi*(u*a+v*b)); 
     G(u,v)=H(u,v)*F(u,v); 
    end
end
G=ifftshift(G); 
g=ifft2(G); 
g=256.*g./max(max(g));
g=uint8(real(g)); 
subplot(1,2,2); 
imshow(g); 
title('运动模糊化lena.bmp'); 
imwrite(g,'lena运动模糊的结果.bmp'); 
 
figure(2)
subplot(1,2,1); 
imshow(g); 
title('运动模糊化lena.bmp'); 
imwrite(g,' lena运动模糊的结果.bmp');
I2=imnoise(g,'gaussian',0,0.01); 
subplot(1,2,2)
imshow(I2); 
title('模糊lena.bmp加入高斯噪声(u=0，s^2=0.01)'); 
imwrite(I2,'模糊lena.bmp加入高斯噪声(u=0，s^2=0.01).bmp');
 
figure(3)
I=imread('lena.bmp'); 
h=fspecial('motion',50,45); 
I1=imfilter(I,h,'circular','conv'); 
I2=imnoise(I1,'gaussian',0,0.01); 
subplot(1,2,1) 
imshow(I2); 
title('lena运动模糊+高斯噪声'); 
imwrite(I2,'lena运动模糊+高斯噪声.bmp');
g1=double(I2);      
G1=fft2(g1);       
G1=fftshift(G1);    
[M,N]=size(G1); 
a=0.1;
b=0.1;
T=1;
K=0.06; 
for u=1:M 
    for v=1:N   
H1(u,v)=(T/(pi*(u*a+v*b)))*sin(pi*(u*a+v*b))*exp(-sqrt(-1)*pi*(u*a+v*b)); 
     F(u,v)=1/H1(u,v)*(abs(H1(u,v)))^2/((abs(H1(u,v)))^2+K)*G1(u,v); 
    end
end
F=ifftshift(F); 
f=ifft2(F); 
f=256.*f./max(max(f)); 
f=uint8(real(f)); 
subplot(1,2,2) 
imshow(f); 
title('维纳滤波的结果(K=0.06)'); 
imwrite(f,'维纳滤波的结果(K=0.06).bmp'); 
 
I=imread('lena.bmp'); 
h=fspecial('motion',50,45); 
I1=imfilter(I,h,'circular','conv'); 
I2=imnoise(I1,'gaussian',0,0.01); 
figure(4);
subplot(1,2,1) 
imshow(I2); 
title('lena运动模糊+高斯噪声'); 
imwrite(I2,' lena运动模糊+高斯噪声.bmp'); 
V=0.0001; 
NoisePower=V*prod(size(I)); 
[g,LAGRA]=deconvreg(I1,h,NoisePower);
subplot(1,2,2)
imshow(g); 
title('约束最小二乘滤波的结果'); 
imwrite(g,'约束最小二乘滤波的结果.bmp');


